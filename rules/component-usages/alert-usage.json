{
  "component_name": "Alert",
  "component_description": "Alert is a simple & elegant way to let your users know about important things like system outages, announcements,...",
  "props": {
    "className": {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "A space-delimited list of class names to pass along to the element."
    },
    "content": {
      "name": "content",
      "type": "string | ReactElement<any, string | JSXElementConstructor<any>>",
      "required": true,
      "description": "Alert content."
    },
    "data-test-id": {
      "name": "data-test-id",
      "type": "string",
      "required": false,
      "description": "Testing id of the element."
    },
    "icon": {
      "name": "icon",
      "type": "null | \"number\" | \"warning\" | \"bold\" | \"cancel\" | \"remove\" | \"menu\" | \"table\" | \"image\" | \"switch\" | \"target\" | \"restart\" | \"list\" | \"loading\" | \"file\" | \"directory\" | \"document\" | \"feed\" | \"location\" | \"move\" | \"activate\" | \"add-emoji\" | \"add-person\" | \"adjustment\" | \"alignment\" | \"archive\" | \"backward-arrow\" | \"bank\" | \"bell\" | \"billing\" | \"bookmark\" | \"box-check\" | \"box\" | \"buildings\" | \"cake\" | \"calendar-clock\" | \"calendar\" | \"candy-box-menu\" | \"carat-down-small\" | \"carat-down\" | \"carat-left\" | \"carat-right\" | \"carat-up-small\" | \"carat-up\" | \"circle-add\" | \"circle-cancel\" | \"circle-check\" | \"circle-down\" | \"circle-info\" | \"circle-left\" | \"circle-ok\" | \"circle-pencil\" | \"circle-question\" | \"circle-remove\" | \"circle-right\" | \"circle-up\" | \"circle-warning\" | \"clock-3\" | \"clock\" | \"cloud-download\" | \"cloud-upload\" | \"cog\" | \"coin\" | \"contacts\" | \"corner-resize\" | \"credit-card\" | \"diamond\" | \"direction-arrows\" | \"dollar-coin-shine\" | \"dot-filled\" | \"double-buildings\" | \"edit-template\" | \"envelope\" | \"expense\" | \"eye-circle\" | \"eye-invisible\" | \"eye\" | \"face-meh\" | \"face-sad\" | \"face-smiley\" | \"feedbacks\" | \"file-certified\" | \"file-clone\" | \"file-copy\" | \"file-csv\" | \"file-dispose\" | \"file-doc\" | \"file-excel\" | \"file-export\" | \"file-lock\" | \"file-pdf\" | \"file-powerpoint\" | \"file-search\" | \"file-secured\" | \"file-sheets\" | \"file-slide\" | \"file-verified\" | \"file-word\" | \"flask\" | \"folder-user\" | \"folder\" | \"format-bold\" | \"format-heading1\" | \"format-heading2\" | \"format-italic\" | \"format-list-bulleted\" | \"format-list-numbered\" | \"format-underlined\" | \"forward-arrow\" | \"funnel-filter\" | \"gauge\" | \"global-dollar\" | \"globe\" | \"graduation-cap\" | \"graph\" | \"happy-sun\" | \"health-bag\" | \"heart\" | \"home\" | \"import\" | \"incident-siren\" | \"instapay\" | \"loading-2\" | \"lock\" | \"looks-one\" | \"looks-two\" | \"mandatory\" | \"media-content\" | \"moneybag\" | \"moon\" | \"multiple-stars\" | \"multiple-users\" | \"node\" | \"open-folder\" | \"paperclip\" | \"payment-summary\" | \"pencil\" | \"phone\" | \"piggy-bank\" | \"pin\" | \"plane\" | \"play-circle\" | \"print\" | \"raising-hands\" | \"rectangle-mandatory\" | \"reply-arrow\" | \"reply\" | \"reschedule\" | \"rostering\" | \"save\" | \"schedule-send\" | \"schedule\" | \"search-person\" | \"send\" | \"speaker\" | \"star-award\" | \"star-badge\" | \"star-medal\" | \"star\" | \"steps-circle\" | \"stopwatch\" | \"suitcase\" | \"survey\" | \"swag\" | \"tag\" | \"teams\" | \"thumb-down\" | \"thumb-up\" | \"timesheet\" | \"touch-id\" | \"trash-bin\" | \"unlock\" | \"user\" | \"video-1\" | \"video-2\" | \"wrench\" | \"academic-hat-outlined\" | \"activate-outlined\" | \"add-person-outlined\" | \"add-section-outlined\" | \"add-time-outlined\" | \"add\" | \"adjustment-outlined\" | \"afternoon-outlined\" | \"alignment-2-outlined\" | \"alignment-outlined\" | \"all-caps\" | \"arrow-down\" | \"arrow-left\" | \"arrow-right\" | \"arrow-up\" | \"at-sign\" | \"bell-outlined\" | \"billing-outlined\" | \"billing-pound-outlined\" | \"body-outlined\" | \"bookmark-outlined\" | \"box-check-outlined\" | \"box-outlined\" | \"briefcase-clock-outlined\" | \"briefcase-search-outlined\" | \"bullet-points\" | \"cake-outlined\" | \"calendar-dates-outlined\" | \"calendar-star-outlined\" | \"camera-outlined\" | \"chat-outlined\" | \"checkmark\" | \"circle-add-outlined\" | \"circle-cancel-outlined\" | \"circle-down-outlined\" | \"circle-info-outlined\" | \"circle-left-outlined\" | \"circle-ok-outlined\" | \"circle-question-outlined\" | \"circle-remove-outlined\" | \"circle-right-outlined\" | \"circle-up-outlined\" | \"circle-warning-outlined\" | \"clipboard-check-outlined\" | \"clipboard-text-outlined\" | \"clock-2-outlined\" | \"clock-outlined\" | \"cog-outlined\" | \"coin-outlined\" | \"coin-pound-outlined\" | \"coin-stack-outlined\" | \"collapse-outlined\" | \"comment-outlined\" | \"contacts-outlined\" | \"content-copy-outlined\" | \"copy-outlined\" | \"credit-card-outlined\" | \"cup-outlined\" | \"cut-outlined\" | \"desktop-computer-outlined\" | \"diagram-outlined\" | \"diamond-outlined\" | \"direction-arrows-outlined\" | \"directory-outlined\" | \"document-outlined\" | \"dollar-coin-shine-outlined\" | \"dollar-sign\" | \"donut-chart-outlined\" | \"double-buildings-outlined\" | \"double-left-arrows\" | \"double-right-arrows\" | \"download-outlined\" | \"edit-template-outlined\" | \"edit-user-outlined\" | \"email-outlined\" | \"enter-arrow\" | \"envelope-outlined\" | \"evening-outlined\" | \"expand-outlined\" | \"expense-outlined\" | \"external-link\" | \"eye-invisible-outlined\" | \"eye-outlined\" | \"face-id\" | \"face-meh-outlined\" | \"face-open-smiley-outlined\" | \"face-sad-outlined\" | \"face-smiley-outlined\" | \"feed-outlined\" | \"feedbacks-outlined\" | \"file-certified-outlined\" | \"file-clone-outlined\" | \"file-copy-outlined\" | \"file-dispose-outlined\" | \"file-download-outlined\" | \"file-export-outlined\" | \"file-lock-outlined\" | \"file-outlined\" | \"file-search-outlined\" | \"file-secured-outlined\" | \"file-text-outlined\" | \"file-verified-outlined\" | \"filter-outlined\" | \"fire-outlined\" | \"flag-outlined\" | \"folder-outlined\" | \"folder-user-outlined\" | \"funnel-filter-outline\" | \"gauge-outlined\" | \"gift-outlined\" | \"graph-outlined\" | \"happy-sun-outlined\" | \"health-bag-outlined\" | \"heart-outlined\" | \"home-outlined\" | \"image-outlined\" | \"import-outlined\" | \"instapay-outlined\" | \"italic\" | \"link-1\" | \"link-2\" | \"list-outlined\" | \"location-outlined\" | \"lock-outlined\" | \"locked-file-outlined\" | \"log-out\" | \"magic-outlined\" | \"media-content-outlined\" | \"menu-close\" | \"menu-expand\" | \"menu-fold-outlined\" | \"menu-unfold-outlined\" | \"mobile-phone-1-outlined\" | \"moneybag-outlined\" | \"moneybag-pound-outlined\" | \"moon-outlined\" | \"more-horizontal\" | \"more-vertical\" | \"morning-outlined\" | \"multiple-folders-outlined\" | \"multiple-users-outlined\" | \"node-outlined\" | \"number-points\" | \"passport-outlined\" | \"payment-summary-outlined\" | \"payslip-outlined\" | \"pencil-outlined\" | \"percentage\" | \"phone-outlined\" | \"piggy-bank-outlined\" | \"pin-outlined\" | \"plane-outlined\" | \"play-circle-outlined\" | \"pound-sign\" | \"print-outlined\" | \"qr-code-outlined\" | \"re-assign\" | \"redeem\" | \"refresh\" | \"reply-outlined\" | \"return-arrow\" | \"ringgit-sign\" | \"rocket-outlined\" | \"rostering-outlined\" | \"save-outlined\" | \"schedule-outlined\" | \"search-outlined\" | \"send-outlined\" | \"share-1\" | \"share-2\" | \"shield-check-outlined\" | \"single-down-arrow\" | \"single-left-arrow\" | \"single-right-arrow\" | \"single-up-arrow\" | \"sparkle-2-outlined\" | \"sparkle-outlined\" | \"speaker-outlined\" | \"speed-outlined\" | \"star-outlined\" | \"stopwatch-outlined\" | \"strikethrough\" | \"suitcase-outlined\" | \"survey-outlined\" | \"switch-outlined\" | \"sync\" | \"tablet-outlined\" | \"target-outlined\" | \"thumb-up-outlined\" | \"timesheet-outlined\" | \"transfer\" | \"trash-bin-outlined\" | \"trash-outlined\" | \"unavailable\" | \"underline\" | \"unlinked\" | \"unlock-outlined\" | \"upload-outlined\" | \"user-add-outlined\" | \"user-circle-outlined\" | \"user-move-outlined\" | \"user-out-outlined\" | \"user-outlined\" | \"user-rectangle-outlined\" | \"user-remove-outlined\" | \"user-warning-outlined\" | \"video-1-outlined\" | \"video-2-outlined\" | \"wallet-outlined\" | \"wrench-outlined\" | ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Icon name or a react element as custom icon.\n- undefined: use default icon according to Alert intent.\n- null: no icon at all.\n- IconName: an icon identifier from hero-design icon list.\n- ReactElement: Custom icon by your own."
    },
    "id": {
      "name": "id",
      "type": "string",
      "required": false,
      "description": "Id of the element."
    },
    "intent": {
      "name": "intent",
      "type": "\"danger\" | \"success\" | \"warning\" | \"error\" | \"info\"",
      "required": false,
      "description": "Visual intent color to apply to alert."
    },
    "onClose": {
      "name": "onClose",
      "type": "() => void",
      "required": false,
      "description": "Closing callback. When onClose is available, an  `x`  button will be rendered on the right side of alert. The callback will be called when user clicks on  `x`  button."
    },
    "style": {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "Additional inline style to be applied for the most outer element of the component."
    },
    "sx": {
      "name": "sx",
      "type": "Partial<Record<SxKeys, SxValues>>",
      "required": false,
      "description": "[Theme-aware style property](/guidelines/sxProp)"
    },
    "title": {
      "name": "title",
      "type": "string | ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Alert title."
    }
  },
  "examples": [
    {
      "example_name": "Basic",
      "example_description": "Show an alert with title & content\n```jsx live\n<Alert\n  title=\"Special Series D Offer\"\n  content=\"No subscription fees to pay until July 2021 and 2 months free.\"\n/>\n```",
      "code": "<Alert\n  title=\"Special Series D Offer\"\n  content=\"No subscription fees to pay until July 2021 and 2 months free.\"\n/>",
      "purpose_description": "The purpose of this example is to demonstrate a basic usage of an Alert component in a React application. It shows how to display a simple alert message with a title and content, which is a common requirement in user interfaces for notifying users about important information or updates.",
      "technical_description": "The example uses a JSX syntax to render an Alert component, which is a custom React component designed to display alert messages. The component is invoked with two props: 'title' and 'content'. These props are passed as strings and are likely used within the Alert component to render the title and content of the alert message. The component is rendered directly within the JSX, indicating that it is likely a functional component that takes props as input and returns a JSX element representing the alert.",
      "patterns_description": "This example demonstrates a common React pattern of using props to pass data into a component. It highlights the separation of concerns by keeping the alert's content outside of the component logic, allowing for easy updates and reusability. The use of JSX to render the component is a standard practice in React, promoting readability and maintainability of the code. Additionally, the component is likely a functional component, which is a modern React pattern that encourages simplicity and the use of hooks if needed.",
      "use_cases_description": "This example is particularly useful in scenarios where a web application needs to notify users about important updates, offers, or alerts. It can be used in e-commerce sites to announce special deals, in SaaS applications to inform users about subscription changes, or in any application where timely and clear communication with the user is necessary. The simplicity of the component makes it easy to integrate into various parts of an application where alert messages are needed."
    },
    {
      "example_name": "With different intents",
      "example_description": "```jsx live\n<>\n  <Alert\n    title=\"Infomationational Notes\"\n    content=\"Additional description and advice about what the user can do.\"\n    intent=\"info\"\n  />\n  <br />\n  <Alert\n    title=\"Success Tips\"\n    content=\"Detailed description and advice about what the user can do.\"\n    intent=\"success\"\n  />\n  <br />\n  <Alert\n    title=\"Warning\"\n    content=\"Warning description goes here to warn the user of a potentially important use case.\"\n    intent=\"warning\"\n  />\n  <br />\n  <Alert\n    title=\"Danger\"\n    content=\"Error description goes here to inform the user that an error has been made.\"\n    intent=\"danger\"\n  />\n  <br />\n  <Alert\n    title=\"Error\"\n    content=\"Error description goes here to inform the user that an error has been made.\"\n    intent=\"error\"\n  />\n</>\n```",
      "code": "<>\n  <Alert\n    title=\"Infomationational Notes\"\n    content=\"Additional description and advice about what the user can do.\"\n    intent=\"info\"\n  />\n  <br />\n  <Alert\n    title=\"Success Tips\"\n    content=\"Detailed description and advice about what the user can do.\"\n    intent=\"success\"\n  />\n  <br />\n  <Alert\n    title=\"Warning\"\n    content=\"Warning description goes here to warn the user of a potentially important use case.\"\n    intent=\"warning\"\n  />\n  <br />\n  <Alert\n    title=\"Danger\"\n    content=\"Error description goes here to inform the user that an error has been made.\"\n    intent=\"danger\"\n  />\n  <br />\n  <Alert\n    title=\"Error\"\n    content=\"Error description goes here to inform the user that an error has been made.\"\n    intent=\"error\"\n  />\n</>",
      "purpose_description": "This example demonstrates how to use the Alert component with different intent types to convey various levels of importance or types of messages to the user. The example showcases how to visually differentiate alerts based on their intent, such as informational, success, warning, danger, and error messages.",
      "technical_description": "The example uses the Alert component multiple times with different props to render alerts with varying intents. Each Alert component is passed a 'title', 'content', and 'intent' prop. The 'intent' prop determines the styling and iconography of the alert, allowing it to visually communicate the nature of the message (e.g., info, success, warning, danger, error). The use of React fragments (<>...</>) allows multiple Alert components to be returned from a single render function without adding extra nodes to the DOM. The <br /> tags are used to add spacing between the alerts for better visual separation.",
      "patterns_description": "This example demonstrates the use of React fragments to group multiple components without introducing additional DOM elements, which is a common best practice for cleaner and more efficient component rendering. Additionally, the use of intent-based styling is a pattern that helps in maintaining consistency across the application by using predefined styles for different types of messages. This approach enhances user experience by providing visual cues that are easily recognizable.",
      "use_cases_description": "This example is particularly useful in applications where user feedback is critical, such as form submissions, user actions, or system notifications. It can be used in dashboards, admin panels, or any application that requires informing users about the status of their actions or system states. The ability to differentiate alerts by intent makes it suitable for applications that need to convey different levels of urgency or importance, such as e-commerce platforms, healthcare applications, or financial services where user actions need immediate attention or confirmation. "
    },
    {
      "example_name": "Customising alert icon",
      "example_description": "```jsx live\n<>\n  <Alert\n    title=\"Special Series D Offer\"\n    content=\"No subscription fees to pay until July 2021 and 2 months free.\"\n    intent=\"success\"\n    icon={<Icon icon=\"moon\" intent=\"success\" size=\"xlarge\" />}\n  />\n  <br />\n  <Alert\n    title=\"Special Series D Offer\"\n    content=\"This month we are excited to announce our latest round of funding, which will be used to create a better world at work. To help us celebrate this monumental occasion, we want to help you build a better world at work too, so we’re offering 2 months free subscription to help get you started!\"\n    intent=\"success\"\n    icon=\"heart\"\n  />\n</>\n```",
      "code": "<>\n  <Alert\n    title=\"Special Series D Offer\"\n    content=\"No subscription fees to pay until July 2021 and 2 months free.\"\n    intent=\"success\"\n    icon={<Icon icon=\"moon\" intent=\"success\" size=\"xlarge\" />}\n  />\n  <br />\n  <Alert\n    title=\"Special Series D Offer\"\n    content=\"This month we are excited to announce our latest round of funding, which will be used to create a better world at work. To help us celebrate this monumental occasion, we want to help you build a better world at work too, so we’re offering 2 months free subscription to help get you started!\"\n    intent=\"success\"\n    icon=\"heart\"\n  />\n</>",
      "purpose_description": "This example demonstrates how to customize the icon of an Alert component in a React application. It shows the flexibility of the Alert component in accepting different types of icon inputs, either as a React component or a string identifier, to visually enhance the alert message.",
      "technical_description": "The example consists of two Alert components rendered within a React Fragment. Each Alert component is configured with a title, content, and intent, which is set to 'success'. The icon prop is used to customize the icon displayed in the alert. In the first Alert, the icon prop is passed a JSX element, specifically an Icon component with props defining its appearance. In the second Alert, the icon prop is passed a string 'heart', which likely corresponds to a predefined icon within the Alert component's implementation. The use of a React Fragment allows for multiple components to be returned from the render method without adding extra nodes to the DOM.",
      "patterns_description": "This example demonstrates the use of composition and prop-based customization, which are common patterns in React. By allowing the icon prop to accept both React components and strings, the component provides flexibility and reusability. The use of React Fragments to group multiple components without adding extra DOM nodes is a best practice for cleaner and more efficient rendering.",
      "use_cases_description": "This example is particularly useful in scenarios where alerts need to be visually distinct or convey different levels of importance or types of information. Customizing icons can help in branding or aligning with a specific design language. It is applicable in dashboards, notification systems, or any application where user feedback or alerts are necessary, and where visual customization can enhance user experience."
    },
    {
      "example_name": "Customising alert content",
      "example_description": "```jsx live\n<Alert\n  content={\n    <Typography.Text tagName=\"div\" style={{ display: 'flex', margin: 0 }}>\n      No subscription fees to pay until July 2021 and 2 months free.\n      <Button.Link\n        text=\"Book a demo\"\n        href=\"https://employmenthero.com/book-a-demo-series-d-offer-march/\"\n        target=\"_blank\"\n        sx={{ marginLeft: 'auto' }}\n      />\n    </Typography.Text>\n  }\n  intent=\"success\"\n/>\n```",
      "code": "<Alert\n  content={\n    <Typography.Text tagName=\"div\" style={{ display: 'flex', margin: 0 }}>\n      No subscription fees to pay until July 2021 and 2 months free.\n      <Button.Link\n        text=\"Book a demo\"\n        href=\"https://employmenthero.com/book-a-demo-series-d-offer-march/\"\n        target=\"_blank\"\n        sx={{ marginLeft: 'auto' }}\n      />\n    </Typography.Text>\n  }\n  intent=\"success\"\n/>",
      "purpose_description": "This example demonstrates how to customize the content of an Alert component in a React application. The Alert is used to display a success message with additional interactive content, such as a link to book a demo. The customization allows for a more engaging and informative alert message, tailored to specific user interactions.",
      "technical_description": "The example uses the Alert component with a 'content' prop that accepts a JSX element. Inside this element, Typography.Text is used to format the text content, and a Button.Link component is included to provide an actionable link. The Typography.Text component is styled using inline styles to display its content flexibly, aligning the Button.Link to the right using 'marginLeft: auto'. The 'intent' prop is set to 'success', which likely changes the visual styling of the Alert to indicate a positive message. The Button.Link component is configured to open the link in a new tab using 'target=\"_blank\"'.",
      "patterns_description": "This example demonstrates the use of composition in React by nesting components within the Alert component to create a complex UI element. It also uses inline styles for quick and specific styling adjustments. The use of 'target=\"_blank\"' in the Button.Link component is a common pattern for opening links in new tabs, enhancing user experience by not disrupting the current page. Additionally, the use of flexbox for layout management is a best practice for creating responsive and adaptable UI components.",
      "use_cases_description": "This example is particularly useful in scenarios where an application needs to display important notifications or updates to users, such as promotional offers or critical information. The ability to customize the alert content with interactive elements like links makes it suitable for marketing campaigns, user onboarding processes, or any situation where user engagement is desired. It can be used in dashboards, landing pages, or any part of an application where conveying success messages with additional actions is beneficial."
    }
  ]
}