{
  "component_name": "SideBar",
  "component_description": "SideBar component that sticks on the right side to help users navigate through out the app.",
  "props": {},
  "examples": [
    {
      "example_name": "Basic",
      "example_description": "```jsx live\nfunction SideBarExample() {\n  const [selectedItemId, setSelectedItemId] = React.useState();\n  const [selectedSubItemId, setSelectedSubItemId] = React.useState();\n  const redirectTo = (url) => console.log(`Redirect to ${url}`);\n  const onClickSideBarItem = (item) => {\n    setSelectedItemId(item.id);\n    item.panel === undefined && redirectTo(item.url);\n  };\n  const onClickPanelItem = (item) => {\n    if (item === undefined) {\n      setSelectedSubItemId(undefined);\n    } else {\n      setSelectedSubItemId(item.id);\n      item.subItems === undefined && redirectTo(item.url);\n    }\n  };\n\n  const profileItems = {\n    '': [\n      {\n        id: 'general',\n        text: 'General',\n        url: '/general',\n        count: 3,\n        dataAttrs: { 'data-walk-identifier': 'general-item' },\n      },\n      {\n        id: 'notifications',\n        text: 'Notifications',\n        url: '/notifications',\n      },\n    ],\n    Management: [\n      {\n        id: 'schedule',\n        text: 'Schedule',\n        badgeText: 'New',\n        subItems: [\n          {\n            id: 'week',\n            text: 'Week',\n            url: '/week',\n            badgeText: 'New',\n            dataAttrs: { 'data-walk-identifier': 'week-item' },\n          },\n          {\n            id: 'month',\n            text: 'Month',\n            url: '/month',\n          },\n          {\n            id: 'year',\n            text: 'Year',\n            url: '/year',\n          },\n        ],\n      },\n      {\n        id: 'tasks',\n        text: 'Tasks',\n        url: '/tasks',\n      },\n    ],\n    Security: [\n      {\n        id: 'password',\n        text: 'Password',\n        url: '/password',\n      },\n      {\n        id: '2FA',\n        text: '2FA',\n        url: '/2fa',\n      },\n    ],\n  };\n  const items = {\n    header: [\n      { id: 'switch_org', icon: 'multiple-users-outlined', url: '/org' },\n    ],\n    body: [\n      {\n        id: 'home',\n        icon: 'home-outlined',\n        text: 'Home',\n        url: '/home',\n        count: 10,\n        dataAttrs: { 'data-walk-identifier': 'home-item' },\n      },\n      {\n        id: 'profile',\n        icon: 'user-outlined',\n        text: 'Profile',\n        badgeText: 'New',\n        count: 3,\n        panel: (\n          <SideBar.Panel\n            heading=\"Profile\"\n            items={profileItems}\n            selectedItemId={selectedSubItemId}\n            onClickItem={onClickPanelItem}\n          />\n        ),\n      },\n      {\n        id: 'pay',\n        icon: 'moneybag-outlined',\n        text: 'Pay',\n        url: '/pay',\n        count: 100,\n      },\n      {\n        id: 'org_chart',\n        icon: 'graph-outlined',\n        text: 'Organisation Chart',\n        url: '/org_chart',\n        badgeText: 'New',\n      },\n      {\n        id: 'content_management',\n        icon: 'document-outlined',\n        text: 'Content Management',\n        url: '/content_management',\n      },\n    ],\n    footer: [\n      {\n        id: 'setting',\n        icon: 'cog-outlined',\n        text: 'Setting',\n        url: '/setting',\n      },\n    ],\n  };\n  const companyLogo = (\n    <SideBarLogo\n      src=\"https://addons-assets.employmenthero.com/frontend-core/master/static/media/eh-logo-black.c5aa2723.svg\"\n      alt=\"sidebar-logo\"\n    />\n  );\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Col span={[24, 24, 24, 12, 12]}>\n          <SideBar\n            items={items}\n            selectedItemId={selectedItemId}\n            onClickItem={onClickSideBarItem}\n          />\n        </Grid.Col>\n        <Grid.Col span={[24, 24, 24, 12, 12]}>\n          <SideBar\n            items={{\n              ...items,\n              header: [\n                {\n                  id: 'switch_org',\n                  icon: companyLogo,\n                  panel: (\n                    <SideBar.Panel\n                      heading=\"Organisations\"\n                      variant=\"blank\"\n                      items={{}}\n                    >\n                      Panel content\n                    </SideBar.Panel>\n                  ),\n                },\n              ],\n            }}\n            selectedItemId={selectedItemId}\n            onClickItem={onClickSideBarItem}\n          />\n        </Grid.Col>\n      </Grid.Row>\n    </Grid>\n  );\n}\n```",
      "code": "function SideBarExample() {\n  const [selectedItemId, setSelectedItemId] = React.useState();\n  const [selectedSubItemId, setSelectedSubItemId] = React.useState();\n  const redirectTo = (url) => console.log(`Redirect to ${url}`);\n  const onClickSideBarItem = (item) => {\n    setSelectedItemId(item.id);\n    item.panel === undefined && redirectTo(item.url);\n  };\n  const onClickPanelItem = (item) => {\n    if (item === undefined) {\n      setSelectedSubItemId(undefined);\n    } else {\n      setSelectedSubItemId(item.id);\n      item.subItems === undefined && redirectTo(item.url);\n    }\n  };\n\n  const profileItems = {\n    '': [\n      {\n        id: 'general',\n        text: 'General',\n        url: '/general',\n        count: 3,\n        dataAttrs: { 'data-walk-identifier': 'general-item' },\n      },\n      {\n        id: 'notifications',\n        text: 'Notifications',\n        url: '/notifications',\n      },\n    ],\n    Management: [\n      {\n        id: 'schedule',\n        text: 'Schedule',\n        badgeText: 'New',\n        subItems: [\n          {\n            id: 'week',\n            text: 'Week',\n            url: '/week',\n            badgeText: 'New',\n            dataAttrs: { 'data-walk-identifier': 'week-item' },\n          },\n          {\n            id: 'month',\n            text: 'Month',\n            url: '/month',\n          },\n          {\n            id: 'year',\n            text: 'Year',\n            url: '/year',\n          },\n        ],\n      },\n      {\n        id: 'tasks',\n        text: 'Tasks',\n        url: '/tasks',\n      },\n    ],\n    Security: [\n      {\n        id: 'password',\n        text: 'Password',\n        url: '/password',\n      },\n      {\n        id: '2FA',\n        text: '2FA',\n        url: '/2fa',\n      },\n    ],\n  };\n  const items = {\n    header: [\n      { id: 'switch_org', icon: 'multiple-users-outlined', url: '/org' },\n    ],\n    body: [\n      {\n        id: 'home',\n        icon: 'home-outlined',\n        text: 'Home',\n        url: '/home',\n        count: 10,\n        dataAttrs: { 'data-walk-identifier': 'home-item' },\n      },\n      {\n        id: 'profile',\n        icon: 'user-outlined',\n        text: 'Profile',\n        badgeText: 'New',\n        count: 3,\n        panel: (\n          <SideBar.Panel\n            heading=\"Profile\"\n            items={profileItems}\n            selectedItemId={selectedSubItemId}\n            onClickItem={onClickPanelItem}\n          />\n        ),\n      },\n      {\n        id: 'pay',\n        icon: 'moneybag-outlined',\n        text: 'Pay',\n        url: '/pay',\n        count: 100,\n      },\n      {\n        id: 'org_chart',\n        icon: 'graph-outlined',\n        text: 'Organisation Chart',\n        url: '/org_chart',\n        badgeText: 'New',\n      },\n      {\n        id: 'content_management',\n        icon: 'document-outlined',\n        text: 'Content Management',\n        url: '/content_management',\n      },\n    ],\n    footer: [\n      {\n        id: 'setting',\n        icon: 'cog-outlined',\n        text: 'Setting',\n        url: '/setting',\n      },\n    ],\n  };\n  const companyLogo = (\n    <SideBarLogo\n      src=\"https://addons-assets.employmenthero.com/frontend-core/master/static/media/eh-logo-black.c5aa2723.svg\"\n      alt=\"sidebar-logo\"\n    />\n  );\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Col span={[24, 24, 24, 12, 12]}>\n          <SideBar\n            items={items}\n            selectedItemId={selectedItemId}\n            onClickItem={onClickSideBarItem}\n          />\n        </Grid.Col>\n        <Grid.Col span={[24, 24, 24, 12, 12]}>\n          <SideBar\n            items={{\n              ...items,\n              header: [\n                {\n                  id: 'switch_org',\n                  icon: companyLogo,\n                  panel: (\n                    <SideBar.Panel\n                      heading=\"Organisations\"\n                      variant=\"blank\"\n                      items={{}}\n                    >\n                      Panel content\n                    </SideBar.Panel>\n                  ),\n                },\n              ],\n            }}\n            selectedItemId={selectedItemId}\n            onClickItem={onClickSideBarItem}\n          />\n        </Grid.Col>\n      </Grid.Row>\n    </Grid>\n  );\n}",
      "purpose_description": "The purpose of this example is to demonstrate a basic implementation of a sidebar component in a React application. The sidebar is designed to provide navigation options with potential sub-navigation panels, allowing users to access different sections of an application. This example showcases how to manage state for selected items and handle navigation actions.",
      "technical_description": "The component uses React's useState hook to manage the state of selected items in the sidebar. Two state variables, selectedItemId and selectedSubItemId, are used to track the currently selected main item and sub-item, respectively. The component defines two handler functions, onClickSideBarItem and onClickPanelItem, to update these states and perform navigation actions. The redirectTo function simulates navigation by logging the URL to the console. The sidebar items are organized into categories such as header, body, and footer, with some items containing sub-items that are displayed in a panel. The component uses a Grid layout to display two instances of the sidebar, demonstrating different configurations.",
      "patterns_description": "This example demonstrates several React patterns and best practices, such as using the useState hook for state management and defining handler functions for event-driven updates. It also shows how to structure component props to allow for flexible and reusable components. The use of conditional rendering for panels and sub-items is a common pattern in React to manage complex UI interactions. Additionally, the example illustrates how to use composition by nesting SideBar.Panel components within SideBar items, enabling hierarchical navigation structures.",
      "use_cases_description": "This sidebar component example is particularly useful in applications that require a structured and hierarchical navigation system, such as admin dashboards, content management systems, or any application with multiple sections and sub-sections. It can be adapted to fit various design requirements and is suitable for both desktop and mobile interfaces, given its flexible layout and state management capabilities. The example can serve as a foundation for more complex navigation systems, including those with dynamic content or user-specific configurations."
    }
  ]
}