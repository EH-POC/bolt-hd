{
  "component_name": "Tabs",
  "component_description": "Tabs make it easy to switch between different views.",
  "props": {
    "className": {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "A space-delimited list of class names to pass along to the element."
    },
    "data-test-id": {
      "name": "data-test-id",
      "type": "string",
      "required": false,
      "description": "Testing id of the element."
    },
    "id": {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "Unique identifier for Tabs container. This will be combined with the id of each Tab child to generate ARIA accessibility attributes."
    },
    "onChange": {
      "name": "onChange",
      "type": "(tabId: string | number) => void",
      "required": true
    },
    "renderActiveTabPanelOnly": {
      "name": "renderActiveTabPanelOnly",
      "type": "boolean",
      "required": false,
      "description": "Whether inactive tab panels should be removed from the DOM and unmounted in React."
    },
    "selectedTabId": {
      "name": "selectedTabId",
      "type": "string | number",
      "required": true,
      "description": "Current selected tab id."
    },
    "style": {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "Additional inline style to be applied for the most outer element of the component."
    },
    "sx": {
      "name": "sx",
      "type": "Partial<Record<SxKeys, SxValues>>",
      "required": false,
      "description": "[Theme-aware style property](/guidelines/sxProp)"
    },
    "tabs": {
      "name": "tabs",
      "type": "Array<{ disabled?: boolean; icon?: \"number\" | \"warning\" | \"bold\" | \"cancel\" | \"remove\" | \"menu\" | \"table\" | \"image\" | \"switch\" | \"target\" | \"restart\" | \"list\" | \"loading\" | \"file\" | \"directory\" | \"document\" | \"feed\" | \"location\" | \"move\" | \"activate\" | \"add-emoji\" | \"add-person\" | \"adjustment\" | \"alignment\" | \"archive\" | \"backward-arrow\" | \"bank\" | \"bell\" | \"billing\" | \"bookmark\" | \"box-check\" | \"box\" | \"buildings\" | \"cake\" | \"calendar-clock\" | \"calendar\" | \"candy-box-menu\" | \"carat-down-small\" | \"carat-down\" | \"carat-left\" | \"carat-right\" | \"carat-up-small\" | \"carat-up\" | \"circle-add\" | \"circle-cancel\" | \"circle-check\" | \"circle-down\" | \"circle-info\" | \"circle-left\" | \"circle-ok\" | \"circle-pencil\" | \"circle-question\" | \"circle-remove\" | \"circle-right\" | \"circle-up\" | \"circle-warning\" | \"clock-3\" | \"clock\" | \"cloud-download\" | \"cloud-upload\" | \"cog\" | \"coin\" | \"contacts\" | \"corner-resize\" | \"credit-card\" | \"diamond\" | \"direction-arrows\" | \"dollar-coin-shine\" | \"dot-filled\" | \"double-buildings\" | \"edit-template\" | \"envelope\" | \"expense\" | \"eye-circle\" | \"eye-invisible\" | \"eye\" | \"face-meh\" | \"face-sad\" | \"face-smiley\" | \"feedbacks\" | \"file-certified\" | \"file-clone\" | \"file-copy\" | \"file-csv\" | \"file-dispose\" | \"file-doc\" | \"file-excel\" | \"file-export\" | \"file-lock\" | \"file-pdf\" | \"file-powerpoint\" | \"file-search\" | \"file-secured\" | \"file-sheets\" | \"file-slide\" | \"file-verified\" | \"file-word\" | \"flask\" | \"folder-user\" | \"folder\" | \"format-bold\" | \"format-heading1\" | \"format-heading2\" | \"format-italic\" | \"format-list-bulleted\" | \"format-list-numbered\" | \"format-underlined\" | \"forward-arrow\" | \"funnel-filter\" | \"gauge\" | \"global-dollar\" | \"globe\" | \"graduation-cap\" | \"graph\" | \"happy-sun\" | \"health-bag\" | \"heart\" | \"home\" | \"import\" | \"incident-siren\" | \"instapay\" | \"loading-2\" | \"lock\" | \"looks-one\" | \"looks-two\" | \"mandatory\" | \"media-content\" | \"moneybag\" | \"moon\" | \"multiple-stars\" | \"multiple-users\" | \"node\" | \"open-folder\" | \"paperclip\" | \"payment-summary\" | \"pencil\" | \"phone\" | \"piggy-bank\" | \"pin\" | \"plane\" | \"play-circle\" | \"print\" | \"raising-hands\" | \"rectangle-mandatory\" | \"reply-arrow\" | \"reply\" | \"reschedule\" | \"rostering\" | \"save\" | \"schedule-send\" | \"schedule\" | \"search-person\" | \"send\" | \"speaker\" | \"star-award\" | \"star-badge\" | \"star-medal\" | \"star\" | \"steps-circle\" | \"stopwatch\" | \"suitcase\" | \"survey\" | \"swag\" | \"tag\" | \"teams\" | \"thumb-down\" | \"thumb-up\" | \"timesheet\" | \"touch-id\" | \"trash-bin\" | \"unlock\" | \"user\" | \"video-1\" | \"video-2\" | \"wrench\" | \"academic-hat-outlined\" | \"activate-outlined\" | \"add-person-outlined\" | \"add-section-outlined\" | \"add-time-outlined\" | \"add\" | \"adjustment-outlined\" | \"afternoon-outlined\" | \"alignment-2-outlined\" | \"alignment-outlined\" | \"all-caps\" | \"arrow-down\" | \"arrow-left\" | \"arrow-right\" | \"arrow-up\" | \"at-sign\" | \"bell-outlined\" | \"billing-outlined\" | \"billing-pound-outlined\" | \"body-outlined\" | \"bookmark-outlined\" | \"box-check-outlined\" | \"box-outlined\" | \"briefcase-clock-outlined\" | \"briefcase-search-outlined\" | \"bullet-points\" | \"cake-outlined\" | \"calendar-dates-outlined\" | \"calendar-star-outlined\" | \"camera-outlined\" | \"chat-outlined\" | \"checkmark\" | \"circle-add-outlined\" | \"circle-cancel-outlined\" | \"circle-down-outlined\" | \"circle-info-outlined\" | \"circle-left-outlined\" | \"circle-ok-outlined\" | \"circle-question-outlined\" | \"circle-remove-outlined\" | \"circle-right-outlined\" | \"circle-up-outlined\" | \"circle-warning-outlined\" | \"clipboard-check-outlined\" | \"clipboard-text-outlined\" | \"clock-2-outlined\" | \"clock-outlined\" | \"cog-outlined\" | \"coin-outlined\" | \"coin-pound-outlined\" | \"coin-stack-outlined\" | \"collapse-outlined\" | \"comment-outlined\" | \"contacts-outlined\" | \"content-copy-outlined\" | \"copy-outlined\" | \"credit-card-outlined\" | \"cup-outlined\" | \"cut-outlined\" | \"desktop-computer-outlined\" | \"diagram-outlined\" | \"diamond-outlined\" | \"direction-arrows-outlined\" | \"directory-outlined\" | \"document-outlined\" | \"dollar-coin-shine-outlined\" | \"dollar-sign\" | \"donut-chart-outlined\" | \"double-buildings-outlined\" | \"double-left-arrows\" | \"double-right-arrows\" | \"download-outlined\" | \"edit-template-outlined\" | \"edit-user-outlined\" | \"email-outlined\" | \"enter-arrow\" | \"envelope-outlined\" | \"evening-outlined\" | \"expand-outlined\" | \"expense-outlined\" | \"external-link\" | \"eye-invisible-outlined\" | \"eye-outlined\" | \"face-id\" | \"face-meh-outlined\" | \"face-open-smiley-outlined\" | \"face-sad-outlined\" | \"face-smiley-outlined\" | \"feed-outlined\" | \"feedbacks-outlined\" | \"file-certified-outlined\" | \"file-clone-outlined\" | \"file-copy-outlined\" | \"file-dispose-outlined\" | \"file-download-outlined\" | \"file-export-outlined\" | \"file-lock-outlined\" | \"file-outlined\" | \"file-search-outlined\" | \"file-secured-outlined\" | \"file-text-outlined\" | \"file-verified-outlined\" | \"filter-outlined\" | \"fire-outlined\" | \"flag-outlined\" | \"folder-outlined\" | \"folder-user-outlined\" | \"funnel-filter-outline\" | \"gauge-outlined\" | \"gift-outlined\" | \"graph-outlined\" | \"happy-sun-outlined\" | \"health-bag-outlined\" | \"heart-outlined\" | \"home-outlined\" | \"image-outlined\" | \"import-outlined\" | \"instapay-outlined\" | \"italic\" | \"link-1\" | \"link-2\" | \"list-outlined\" | \"location-outlined\" | \"lock-outlined\" | \"locked-file-outlined\" | \"log-out\" | \"magic-outlined\" | \"media-content-outlined\" | \"menu-close\" | \"menu-expand\" | \"menu-fold-outlined\" | \"menu-unfold-outlined\" | \"mobile-phone-1-outlined\" | \"moneybag-outlined\" | \"moneybag-pound-outlined\" | \"moon-outlined\" | \"more-horizontal\" | \"more-vertical\" | \"morning-outlined\" | \"multiple-folders-outlined\" | \"multiple-users-outlined\" | \"node-outlined\" | \"number-points\" | \"passport-outlined\" | \"payment-summary-outlined\" | \"payslip-outlined\" | \"pencil-outlined\" | \"percentage\" | \"phone-outlined\" | \"piggy-bank-outlined\" | \"pin-outlined\" | \"plane-outlined\" | \"play-circle-outlined\" | \"pound-sign\" | \"print-outlined\" | \"qr-code-outlined\" | \"re-assign\" | \"redeem\" | \"refresh\" | \"reply-outlined\" | \"return-arrow\" | \"ringgit-sign\" | \"rocket-outlined\" | \"rostering-outlined\" | \"save-outlined\" | \"schedule-outlined\" | \"search-outlined\" | \"send-outlined\" | \"share-1\" | \"share-2\" | \"shield-check-outlined\" | \"single-down-arrow\" | \"single-left-arrow\" | \"single-right-arrow\" | \"single-up-arrow\" | \"sparkle-2-outlined\" | \"sparkle-outlined\" | \"speaker-outlined\" | \"speed-outlined\" | \"star-outlined\" | \"stopwatch-outlined\" | \"strikethrough\" | \"suitcase-outlined\" | \"survey-outlined\" | \"switch-outlined\" | \"sync\" | \"tablet-outlined\" | \"target-outlined\" | \"thumb-up-outlined\" | \"timesheet-outlined\" | \"transfer\" | \"trash-bin-outlined\" | \"trash-outlined\" | \"unavailable\" | \"underline\" | \"unlinked\" | \"unlock-outlined\" | \"upload-outlined\" | \"user-add-outlined\" | \"user-circle-outlined\" | \"user-move-outlined\" | \"user-out-outlined\" | \"user-outlined\" | \"user-rectangle-outlined\" | \"user-remove-outlined\" | \"user-warning-outlined\" | \"video-1-outlined\" | \"video-2-outlined\" | \"wallet-outlined\" | \"wrench-outlined\" | ReactElement<any, string | JSXElementConstructor<any>>; id: string | number; panel: ReactNode; title: string | ReactElement<any, string | JSXElementConstructor<any>> }>",
      "required": true,
      "description": "List of Tab to be rendered. Each Tab must have an unquie id."
    },
    "viewMoreText": {
      "name": "viewMoreText",
      "type": "string | ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Custom text for view more tab"
    }
  },
  "examples": [
    {
      "example_name": "Basic",
      "example_description": "```jsx live\nfunction BasicTabs() {\n  const tabs = [\n    { id: 1, title: 'Tab 1', panel: 'Tab content 1' },\n    { id: 2, title: 'Tab 2', panel: 'Tab content 2' },\n    { id: 3, title: 'Tab 3', panel: 'Tab content 3', disabled: true },\n    { id: 4, title: 'Tab 4', panel: 'Tab content 4' },\n  ];\n  const [selectedTabId, setSelectedTabId] = React.useState(1);\n  return (\n    <Tabs\n      id=\"sample-tabs\"\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onChange={(newTabId) => setSelectedTabId(newTabId)}\n    />\n  );\n}\n```",
      "code": "function BasicTabs() {\n  const tabs = [\n    { id: 1, title: 'Tab 1', panel: 'Tab content 1' },\n    { id: 2, title: 'Tab 2', panel: 'Tab content 2' },\n    { id: 3, title: 'Tab 3', panel: 'Tab content 3', disabled: true },\n    { id: 4, title: 'Tab 4', panel: 'Tab content 4' },\n  ];\n  const [selectedTabId, setSelectedTabId] = React.useState(1);\n  return (\n    <Tabs\n      id=\"sample-tabs\"\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onChange={(newTabId) => setSelectedTabId(newTabId)}\n    />\n  );\n}",
      "purpose_description": "The BasicTabs component is designed to provide a simple tabbed interface where users can switch between different content panels by clicking on tab headers. It demonstrates a basic implementation of a tab system using React, allowing for easy navigation between different sections of content.",
      "technical_description": "The BasicTabs component initializes an array of tab objects, each containing an id, title, and panel content. One of the tabs is marked as disabled. The component uses React's useState hook to manage the state of the currently selected tab, initialized to the first tab. The Tabs component is rendered with props including the tabs array, the currently selected tab id, and an onChange handler that updates the selected tab state when a new tab is clicked.",
      "patterns_description": "This example demonstrates the use of controlled components in React, where the state of the selected tab is managed by the parent component (BasicTabs) and passed down to the child component (Tabs) via props. It also shows the use of the useState hook for state management and the use of callback functions to handle state updates.",
      "use_cases_description": "This basic tab component is particularly useful in scenarios where an application needs to display multiple sections of content in a compact and organized manner. It can be used in dashboards, settings pages, or any interface where content needs to be categorized and easily accessible through tabbed navigation."
    },
    {
      "example_name": "Tabs with icon",
      "example_description": "Tab title can have a left icon.\n```jsx live\nfunction TabsWithIcon() {\n  const tabs = [\n    { id: 1, title: 'Tab 1', panel: 'Tab content 1', icon: 'star-outlined' },\n    { id: 2, title: 'Tab 2', panel: 'Tab content 2', icon: 'user-outlined' },\n    { id: 3, title: 'Tab 3', panel: 'Tab content 3', icon: 'number' },\n  ];\n  const [selectedTabId, setSelectedTabId] = React.useState(1);\n  return (\n    <Tabs\n      id=\"sample-tabs\"\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onChange={(newTabId) => setSelectedTabId(newTabId)}\n    />\n  );\n}\n```",
      "code": "function TabsWithIcon() {\n  const tabs = [\n    { id: 1, title: 'Tab 1', panel: 'Tab content 1', icon: 'star-outlined' },\n    { id: 2, title: 'Tab 2', panel: 'Tab content 2', icon: 'user-outlined' },\n    { id: 3, title: 'Tab 3', panel: 'Tab content 3', icon: 'number' },\n  ];\n  const [selectedTabId, setSelectedTabId] = React.useState(1);\n  return (\n    <Tabs\n      id=\"sample-tabs\"\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onChange={(newTabId) => setSelectedTabId(newTabId)}\n    />\n  );\n}",
      "purpose_description": "The purpose of this example is to demonstrate how to create a tabbed interface in React where each tab can have an associated icon displayed to the left of the tab title. This is useful for enhancing the visual appeal and usability of the tab navigation by providing intuitive icons that represent the content or purpose of each tab.",
      "technical_description": "The component `TabsWithIcon` initializes an array of tab objects, each containing an `id`, `title`, `panel`, and `icon`. The `useState` hook is used to manage the state of the currently selected tab, starting with the first tab selected by default. The component renders a `Tabs` component, passing it several props: `id`, `tabs`, `selectedTabId`, and `onChange`. The `onChange` prop is a callback function that updates the `selectedTabId` state when a different tab is selected. This setup allows the `Tabs` component to render the appropriate content and icon for the selected tab.",
      "patterns_description": "This example demonstrates the use of controlled components in React, where the state of the component is managed by React's `useState` hook. It also shows the use of callback functions to handle state updates, a common pattern in React for managing user interactions. The component structure promotes separation of concerns by defining the tab data and logic separately from the rendering logic, making the component easier to maintain and extend.",
      "use_cases_description": "This example is particularly useful in scenarios where a user interface requires multiple sections of content to be displayed in a compact and organized manner, such as in dashboards, settings pages, or any application with multiple views. The addition of icons can improve user experience by providing visual cues that help users quickly identify the purpose of each tab."
    },
    {
      "example_name": "Subtabs with different sizes",
      "example_description": "`Tabs.Sub` can have 2 sizes: medium and small\n```jsx live\nfunction SubtabsWithIcon() {\n  const [selectedSubTabId, setSelectedSubTabId] = React.useState(1);\n  const subTabs = [\n    {\n      id: 1,\n      title: 'Sub Tab 1',\n      panel: 'SubTab content 1',\n      icon: 'star-outlined',\n    },\n    {\n      id: 2,\n      title: 'Sub Tab 2',\n      panel: 'SubTab content 2',\n      icon: 'user-outlined',\n    },\n    { id: 3, title: 'Sub Tab 3', panel: 'SubTab content 3', icon: 'number' },\n  ];\n\n  const smallSubTabs = [\n    {\n      id: 1,\n      title: 'Small Sub Tab 1',\n      panel: 'Small Sub Tab content 1',\n      icon: 'star-outlined',\n    },\n    {\n      id: 2,\n      title: 'Small Sub Tab 2',\n      panel: 'Small Sub Tab content 2',\n      icon: 'user-outlined',\n    },\n    {\n      id: 3,\n      title: 'Small Sub Tab 3',\n      panel: 'Small Sub Tab content 3',\n      icon: 'number',\n    },\n  ];\n\n  return (\n    <>\n      <Tabs.Sub\n        size=\"medium\"\n        id=\"smaple-sub-tabs\"\n        tabs={subTabs}\n        selectedTabId={selectedSubTabId}\n        onChange={(newTabId) => setSelectedSubTabId(newTabId)}\n      />\n\n      <Tabs.Sub\n        id=\"smaple-sub-tabs\"\n        size=\"small\"\n        tabs={subTabs}\n        selectedTabId={selectedSubTabId}\n        onChange={(newTabId) => setSelectedSubTabId(newTabId)}\n      />\n    </>\n  );\n}\n```",
      "code": "function SubtabsWithIcon() {\n  const [selectedSubTabId, setSelectedSubTabId] = React.useState(1);\n  const subTabs = [\n    {\n      id: 1,\n      title: 'Sub Tab 1',\n      panel: 'SubTab content 1',\n      icon: 'star-outlined',\n    },\n    {\n      id: 2,\n      title: 'Sub Tab 2',\n      panel: 'SubTab content 2',\n      icon: 'user-outlined',\n    },\n    { id: 3, title: 'Sub Tab 3', panel: 'SubTab content 3', icon: 'number' },\n  ];\n\n  const smallSubTabs = [\n    {\n      id: 1,\n      title: 'Small Sub Tab 1',\n      panel: 'Small Sub Tab content 1',\n      icon: 'star-outlined',\n    },\n    {\n      id: 2,\n      title: 'Small Sub Tab 2',\n      panel: 'Small Sub Tab content 2',\n      icon: 'user-outlined',\n    },\n    {\n      id: 3,\n      title: 'Small Sub Tab 3',\n      panel: 'Small Sub Tab content 3',\n      icon: 'number',\n    },\n  ];\n\n  return (\n    <>\n      <Tabs.Sub\n        size=\"medium\"\n        id=\"smaple-sub-tabs\"\n        tabs={subTabs}\n        selectedTabId={selectedSubTabId}\n        onChange={(newTabId) => setSelectedSubTabId(newTabId)}\n      />\n\n      <Tabs.Sub\n        id=\"smaple-sub-tabs\"\n        size=\"small\"\n        tabs={subTabs}\n        selectedTabId={selectedSubTabId}\n        onChange={(newTabId) => setSelectedSubTabId(newTabId)}\n      />\n    </>\n  );\n}",
      "purpose_description": "This example demonstrates the use of a React component, `Tabs.Sub`, to create a tabbed interface with subtabs that can vary in size. The component allows for the display of two different sizes of subtabs: medium and small, each with its own set of tab items and associated content. The example showcases how to manage state for the selected tab and how to handle tab change events.",
      "technical_description": "The `SubtabsWithIcon` component utilizes React's state management through the `useState` hook to keep track of the currently selected subtab. It initializes the state with the first tab selected by default. The component defines two arrays, `subTabs` and `smallSubTabs`, each containing objects that represent individual tabs with properties such as `id`, `title`, `panel`, and `icon`. The component renders two `Tabs.Sub` components, each configured with different sizes ('medium' and 'small'). The `Tabs.Sub` component is passed props including `size`, `id`, `tabs`, `selectedTabId`, and `onChange`. The `onChange` prop is a function that updates the state with the new selected tab ID when a tab is clicked.",
      "patterns_description": "This example demonstrates several React patterns and best practices:\n- **State Management**: Using `useState` to manage the selected tab state, ensuring that the UI reflects the current selection.\n- **Component Composition**: The `Tabs.Sub` component is used twice with different configurations, showcasing how components can be reused with varying props to achieve different UI outcomes.\n- **Event Handling**: The `onChange` prop is used to handle tab selection events, demonstrating how to pass functions as props to handle user interactions.\n- **Declarative Rendering**: The component renders UI based on the state and props, adhering to React's declarative nature.",
      "use_cases_description": "This example is particularly useful in scenarios where a user interface requires tabbed navigation with varying sizes of tabs. It can be applied in dashboards, settings pages, or any application where content needs to be organized into categories or sections. The ability to switch between medium and small tab sizes allows for flexible design choices, accommodating different layouts and screen sizes. Additionally, the inclusion of icons in the tabs enhances the visual appeal and usability of the interface."
    }
  ]
}